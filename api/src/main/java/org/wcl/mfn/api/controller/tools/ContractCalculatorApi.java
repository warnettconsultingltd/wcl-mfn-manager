/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.wcl.mfn.api.controller.tools;

import io.swagger.v3.oas.annotations.*;
import io.swagger.v3.oas.annotations.media.*;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.*;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import jakarta.validation.Valid;

import java.util.*;
import jakarta.annotation.Generated;
import org.wcl.mfn.entities.contract.calculator.*;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-08-12T17:13:21.317528200+01:00[Europe/London]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "contract-calculator", description = "the contract-calculator API")
public interface ContractCalculatorApi {

    /**
     * POST /contract-calculator : Returns a list of suggested contract values based upon a provided salary and bonus value.
     * For given salary and bonus values, provides a range of contract offers from 2 to 6 years.
     *
     * @param requestedRemuneration The requested salary and bonus for the suggested contracts (required)
     * @return Contracts generated and returned. (status code 200)
     *         or Error occurred (status code 4XX)
     *         or Error occurred (status code 5XX)
     */
    @Operation(
        operationId = "contractCalculatorPost",
        summary = "Returns a list of suggested contract values based upon a provided salary and bonus value.",
        description = "For given salary and bonus values, provides a range of contract offers from 2 to 6 years.",
        responses = {
            @ApiResponse(responseCode = "200", description = "Contracts generated and returned.", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = SuggestedContract.class)))
            }),
            @ApiResponse(responseCode = "4XX", description = "Error occurred", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "5XX", description = "Error occurred", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/contract-calculator",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<List<SuggestedContract>> contractCalculatorPost(
        @Parameter(name = "RequestedRemuneration",
                   description = "The requested salary and bonus for the suggested contracts",
                    required = true) @Valid @RequestBody RequestedRemuneration requestedRemuneration) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
